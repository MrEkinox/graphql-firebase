### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar Any

input BooleanWhereInput {
  arrayContains: Boolean
  equalTo: Boolean
  exists: Boolean
  greaterThan: Boolean
  greaterThanOrEqualTo: Boolean
  in: [Boolean]
  lessThan: Boolean
  lessThanOrEqualTo: Boolean
  notEqualTo: Boolean
  notIn: [Boolean]
}

input CreateFolderDocumentFileInput {
  name: String!
}

input CreateFolderDocumentInput {
  file: FolderDocumentFileCollectionInput
  name: String!
}

input CreateFolderInput {
  documents: FolderDocumentCollectionInput
  name: String!
}

scalar Date

input DateWhereInput {
  arrayContains: Date
  equalTo: Date
  exists: Boolean
  greaterThan: Date
  greaterThanOrEqualTo: Date
  in: [Date]
  lessThan: Date
  lessThanOrEqualTo: Date
  notEqualTo: Date
  notIn: [Date]
}

input DeleteFolderDocumentFileInput {
  id: ID!
}

input DeleteFolderDocumentInput {
  id: ID!
}

input DeleteFolderInput {
  id: ID!
}

type File {
  isLinked: Boolean
  name: String
  url: String
}

input FileWhereInput {
  exists: Boolean
}

type Folder {
  createdAt: Date!
  documents(limit: Int = 50, offset: Int = 0, where: FolderDocumentWhereInput): FolderDocumentCollection
  id: ID!
  name: String!
  updatedAt: Date!
}

type FolderCollection {
  count: Int

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [FolderEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

input FolderCollectionInput {
  createAndAdd: [CreateFolderInput]
  delete: [ID]
  update: [UpdateFolderInput]
}

type FolderDocument {
  createdAt: Date!
  file(limit: Int = 50, offset: Int = 0, where: FolderDocumentFileWhereInput): FolderDocumentFileCollection
  folderId: ID!
  id: ID!
  name: String!
  updatedAt: Date!
}

type FolderDocumentCollection {
  count: Int

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [FolderDocumentEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

input FolderDocumentCollectionInput {
  createAndAdd: [CreateFolderDocumentInput]
  delete: [ID]
  update: [UpdateFolderDocumentInput]
}

type FolderDocumentEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: FolderDocument
}

type FolderDocumentFile {
  createdAt: Date!
  folderDocumentId: ID!
  folderId: ID!
  id: ID!
  name: String!
  updatedAt: Date!
}

type FolderDocumentFileCollection {
  count: Int

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [FolderDocumentFileEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

input FolderDocumentFileCollectionInput {
  createAndAdd: [CreateFolderDocumentFileInput]
  delete: [ID]
  update: [UpdateFolderDocumentFileInput]
}

type FolderDocumentFileEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: FolderDocumentFile
}

input FolderDocumentFileReferenceInput {
  createAndLink: CreateFolderDocumentFileInput
  link: ID
}

input FolderDocumentFileReferenceListInput {
  add: [ID]
  createAndAdd: [CreateFolderDocumentFileInput]
  remove: [ID]
}

input FolderDocumentFileWhereInput {
  createdAt: DateWhereInput
  exists: Boolean
  folderDocumentId: IDWhereInput
  folderId: IDWhereInput
  id: IDWhereInput
  name: StringWhereInput
  updatedAt: DateWhereInput
}

input FolderDocumentReferenceInput {
  createAndLink: CreateFolderDocumentInput
  link: ID
}

input FolderDocumentReferenceListInput {
  add: [ID]
  createAndAdd: [CreateFolderDocumentInput]
  remove: [ID]
}

input FolderDocumentWhereInput {
  createdAt: DateWhereInput
  exists: Boolean
  file: FolderDocumentFileWhereInput
  folderId: IDWhereInput
  id: IDWhereInput
  name: StringWhereInput
  updatedAt: DateWhereInput
}

type FolderEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Folder
}

input FolderReferenceInput {
  createAndLink: CreateFolderInput
  link: ID
}

input FolderReferenceListInput {
  add: [ID]
  createAndAdd: [CreateFolderInput]
  remove: [ID]
}

input FolderWhereInput {
  createdAt: DateWhereInput
  documents: FolderDocumentWhereInput
  exists: Boolean
  id: IDWhereInput
  name: StringWhereInput
  updatedAt: DateWhereInput
}

input IDWhereInput {
  arrayContains: ID
  equalTo: ID
  exists: Boolean
  greaterThan: ID
  greaterThanOrEqualTo: ID
  in: [ID]
  lessThan: ID
  lessThanOrEqualTo: ID
  notEqualTo: ID
  notIn: [ID]
}

input IntWhereInput {
  arrayContains: Int
  equalTo: Int
  exists: Boolean
  greaterThan: Int
  greaterThanOrEqualTo: Int
  in: [Int]
  lessThan: Int
  lessThanOrEqualTo: Int
  notEqualTo: Int
  notIn: [Int]
}

type Mutation {
  createFolder(input: CreateFolderInput!): Folder
  createFolderDocument(folderId: ID!, input: CreateFolderDocumentInput!): FolderDocument
  createFolderDocumentFile(folderDocumentId: ID!, folderId: ID!, input: CreateFolderDocumentFileInput!): FolderDocumentFile
  deleteFolder(input: DeleteFolderInput!): Boolean
  deleteFolderDocument(folderId: ID!, input: DeleteFolderDocumentInput!): Boolean
  deleteFolderDocumentFile(folderDocumentId: ID!, folderId: ID!, input: DeleteFolderDocumentFileInput!): Boolean
  updateFolder(input: UpdateFolderInput!): Folder
  updateFolderDocument(folderId: ID!, input: UpdateFolderDocumentInput!): FolderDocument
  updateFolderDocumentFile(folderDocumentId: ID!, folderId: ID!, input: UpdateFolderDocumentFileInput!): FolderDocumentFile
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Query {
  folder(id: ID!): Folder
  folderDocument(folderId: ID!, id: ID!): FolderDocument
  folderDocumentFile(folderDocumentId: ID!, folderId: ID!, id: ID!): FolderDocumentFile
  folderDocumentFiles(folderDocumentId: ID!, folderId: ID!, limit: Int = 50, offset: Int = 0, where: FolderDocumentFileWhereInput): FolderDocumentFileCollection
  folderDocuments(folderId: ID!, limit: Int = 50, offset: Int = 0, where: FolderDocumentWhereInput): FolderDocumentCollection
  folders(limit: Int = 50, offset: Int = 0, where: FolderWhereInput): FolderCollection
}

input StringWhereInput {
  arrayContains: String
  equalTo: String
  exists: Boolean
  greaterThan: String
  greaterThanOrEqualTo: String
  in: [String]
  lessThan: String
  lessThanOrEqualTo: String
  notEqualTo: String
  notIn: [String]
}

input UpdateFolderDocumentFieldsInput {
  file: FolderDocumentFileCollectionInput
  name: String
}

input UpdateFolderDocumentFileFieldsInput {
  name: String
}

input UpdateFolderDocumentFileInput {
  fields: UpdateFolderDocumentFileFieldsInput!
  id: ID!
}

input UpdateFolderDocumentInput {
  fields: UpdateFolderDocumentFieldsInput!
  id: ID!
}

input UpdateFolderFieldsInput {
  documents: FolderDocumentCollectionInput
  name: String
}

input UpdateFolderInput {
  fields: UpdateFolderFieldsInput!
  id: ID!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UploadFileInput {
  link: UploadFileLinkInput
  upload: Upload
}

input UploadFileLinkInput {
  name: String!
  url: String!
}

input UploadFileListInput {
  add: [Upload]
  link: [UploadFileLinkInput]
  remove: [String]
}