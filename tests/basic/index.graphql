mutation createUser($fields: CreateUserInput!) {
  createUser(input: $fields) {
    id
    username
    email
    birthDate
    avatar {
      name
      url
    }
  }
}

query getUsers {
  users {
    edges {
      node {
        id
        username
        email
        avatar {
          name
          url
        }
      }
    }
  }
}

mutation updateUser($id: ID!, $fields: UpdateUserFieldsInput!) {
  updateUser(input: { id: $id, fields: $fields }) {
    id
    username
    email
    avatar {
      name
      url
    }
  }
}

mutation createGroup($fields: CreateGroupInput!) {
  createGroup(input: $fields) {
    id
    name
    users {
      id
      username
    }
  }
}

query getGroups {
  groups {
    edges {
      node {
        id
        messages {
          edges {
            node {
              id
            }
          }
        }
      }
    }
  }
}

query getGroupsByUserId($userId: ID!) {
  groups(where: { users: { id: { equalTo: $userId } } }) {
    edges {
      node {
        id
        messages {
          edges {
            node {
              id
              text
              createdBy {
                id
              }
            }
          }
        }
      }
    }
  }
}

query getGroupsByMessageCreatedByUserId($userId: ID!) {
  groups(where: { messages: { createdBy: { id: { equalTo: $userId } } } }) {
    edges {
      node {
        id
        messages {
          edges {
            node {
              id
              text
              createdBy {
                id
              }
            }
          }
        }
      }
    }
  }
}

query getGroupMessageCreatedByUserId($groupId: ID!, $userId: ID!) {
  groupMessages(
    groupId: $groupId
    where: { createdBy: { id: { equalTo: $userId } } }
  ) {
    edges {
      node {
        id
      }
    }
  }
}

mutation createGroupMessage($groupId: ID!, $fields: CreateGroupMessageInput!) {
  createGroupMessage(groupId: $groupId, input: $fields) {
    id
    text
    createdBy {
      id
    }
  }
}

mutation deleteGroupMessage($groupId: ID!, $messageId: ID!) {
  deleteGroupMessage(groupId: $groupId, input: { id: $messageId })
}

mutation deleteGroup($groupId: ID!) {
  deleteGroup(input: { id: $groupId })
}

mutation deleteUser($userId: ID!) {
  deleteUser(input: { id: $userId })
}
